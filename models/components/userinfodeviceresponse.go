// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type UserInfoDeviceResponse struct {
	// BindingTimestamp is when the user was bound to the device. It's in Unix time which is the number of seconds
	// elapsed since January 1, 1970 UTC.
	BindingTimestamp int64 `json:"bindingTimestamp"`
	// DeviceCapabilities indicates what capabilities are available on the device. Options are: "webauthn", "face" and "fingerprint".
	DeviceCapabilities []string `json:"deviceCapabilities,omitempty"`
	// DeviceID is the UUID of the device to unregister.
	DeviceID string `json:"deviceId"`
	// DeviceName is the friendly name of the device.
	DeviceName *string `json:"deviceName,omitempty"`
	// DeviceType is the type of the device.
	DeviceType string `json:"deviceType"`
	// LastAuthenticated is the last time the user device authenticated. It's in Unix time which is the number of
	// seconds elapsed since January 1, 1970 UTC.
	LastAuthenticated int64 `json:"lastAuthenticated"`
	// PushEnabled is true if the user device has a push token.
	PushEnabled bool `json:"pushEnabled"`
	// SupportedUvLevel indicates what user verification levels are supported on the device.
	SupportedUvLevel []int64 `json:"supportedUvLevel,omitempty"`
}

func (o *UserInfoDeviceResponse) GetBindingTimestamp() int64 {
	if o == nil {
		return 0
	}
	return o.BindingTimestamp
}

func (o *UserInfoDeviceResponse) GetDeviceCapabilities() []string {
	if o == nil {
		return nil
	}
	return o.DeviceCapabilities
}

func (o *UserInfoDeviceResponse) GetDeviceID() string {
	if o == nil {
		return ""
	}
	return o.DeviceID
}

func (o *UserInfoDeviceResponse) GetDeviceName() *string {
	if o == nil {
		return nil
	}
	return o.DeviceName
}

func (o *UserInfoDeviceResponse) GetDeviceType() string {
	if o == nil {
		return ""
	}
	return o.DeviceType
}

func (o *UserInfoDeviceResponse) GetLastAuthenticated() int64 {
	if o == nil {
		return 0
	}
	return o.LastAuthenticated
}

func (o *UserInfoDeviceResponse) GetPushEnabled() bool {
	if o == nil {
		return false
	}
	return o.PushEnabled
}

func (o *UserInfoDeviceResponse) GetSupportedUvLevel() []int64 {
	if o == nil {
		return nil
	}
	return o.SupportedUvLevel
}
