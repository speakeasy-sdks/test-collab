// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type AuthStartRequestInstantAuthConsent struct {
	// CollectedTimestamp is the date/time when original consent was collected by the client in ISO 8601 format.
	// Required if status = optedIn.
	CollectedTimestamp *string `json:"collectedTimestamp,omitempty"`
	// Description of the type of consent (electronic/paper), use case, and reference to the terms and conditions (T&C)
	// version (if applicable). Required if status = optedIn.
	// Acceptable characters are: alphanumeric with symbols '-._+=/'.
	Description *string `json:"description,omitempty"`
	// Status denotes whether consent has been provided by the mobile subscriber for this transaction. Acceptable values
	// are: optedIn, optedOut, notCollected, unknown.
	Status string `json:"status"`
	// TransactionID uniquely identifies the consent collected by the client. Required if status = optedIn.
	// Acceptable characters are: alphanumeric with symbols '-._+=/'.
	TransactionID *string `json:"transactionId,omitempty"`
}

func (o *AuthStartRequestInstantAuthConsent) GetCollectedTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.CollectedTimestamp
}

func (o *AuthStartRequestInstantAuthConsent) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AuthStartRequestInstantAuthConsent) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *AuthStartRequestInstantAuthConsent) GetTransactionID() *string {
	if o == nil {
		return nil
	}
	return o.TransactionID
}
