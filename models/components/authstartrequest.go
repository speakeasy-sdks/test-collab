// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"github.com/speakeasy-sdks/test-collab/internal/utils"
)

type AuthStartRequest struct {
	// CallbackURL is an optional callback URL (webhook) where Prove Auth will delivery the user's Push Auth response at
	// the end of the auth flow. If there are any errors encountered during the auth flow, those will be delivered to
	// the callback URL as well. If not provided, the customer server must call the AuthFinish endpoint to retrieve the
	// auth results. The request will be sent as a POST and will contain the same response body as the AuthFinish
	// response.
	CallbackURL *string                   `json:"callbackUrl,omitempty"`
	Delivery    *AuthStartRequestDelivery `json:"delivery,omitempty"`
	// RequestID is a UUID generated on the customer side to be associated with the unique request for tracking.
	// Acceptable characters are: alphanumeric with symbols '-._+=/'.
	RequestID *string                  `default:"eba12f3a-5555-47bc-b85d-21c0cbc4b973" json:"requestId"`
	Subjects  AuthStartRequestSubjects `json:"subjects"`
}

func (a AuthStartRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuthStartRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AuthStartRequest) GetCallbackURL() *string {
	if o == nil {
		return nil
	}
	return o.CallbackURL
}

func (o *AuthStartRequest) GetDelivery() *AuthStartRequestDelivery {
	if o == nil {
		return nil
	}
	return o.Delivery
}

func (o *AuthStartRequest) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *AuthStartRequest) GetSubjects() AuthStartRequestSubjects {
	if o == nil {
		return AuthStartRequestSubjects{}
	}
	return o.Subjects
}
